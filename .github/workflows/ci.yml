name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  display-variables:
    name: display ci variables
    runs-on: ubuntu-latest
    environment: CI
    steps:
    - name: Use variables
      run: |
        echo "SECRET_TOKEN : $SECRET_TOKEN"
        echo "VAR_TOKEN : $VARS_TOKEN"
        echo "PR_HEAD : $PR_HEAD"
        echo "PR_HEAD_SHA : $PR_HEAD_SHA"
        # echo "PR_HEAD_MESSAGE : $PR_HEAD_MESSAGE"
        # echo "PR_HEAD_COMMIT_MESSAGE : $PR_HEAD_COMMIT_MESSAGE"
        # echo "WK_HEAD_COMMIT_MESSAGE : $WK_HEAD_COMMIT_MESSAGE"
        # echo "GITHUB_CONTEXT : $GITHUB_CONTEXT"
      env:
        SECRET_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        VARS_TOKEN: ${{ vars.SLACK_BOT_TOKEN }}
        PR_HEAD: ${{ toJSON(github.event.pull_request.head) }}
        PR_HEAD_SHA: ${{ github.event.pull_request.head.sha }}
        # PR_HEAD_MESSAGE: ${{ github.event.pull_request.head.message }}
        # PR_HEAD_COMMIT_MESSAGE: ${{ github.event.pull_request.head_commit.message }}
        # WK_HEAD_COMMIT_MESSAGE: ${{ github.event.workflow_run.head_commit.message }}
        # GITHUB_CONTEXT: ${{ toJSON(github) }}

  build:
    runs-on: ubuntu-latest
    needs: display-variables
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'pnpm'
      - name : install dependencies
        run: make install
      - name : build
        run: make build
      
  test-unit:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'pnpm'
      - name : install dependencies
        run: make install-offline
      - name : build
        run: make build
      - name : test
        run: make test-unit
      - name: cleanup
        run: sudo chown -R $(whoami):$(id -ng) .
      - name: upload coverage from unit tests
        uses: actions/upload-artifact@v3
        with:
          name: coverage-from-unit-tests
          path: |
            **/coverage/lcov.info
            **/coverage/coverage-final.json
          retention-days: 1
  
  lint:
    runs-on: ubuntu-latest
    needs:
      - test-unit
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'pnpm'
      - name : install dependencies
        run: make install-offline
      - name : build
        run: make build
      - name : lint
        run: make lint

  codecov:
    runs-on: ubuntu-latest
    needs:
      - test-unit
    environment: CI
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: download coverage from unit tests
        uses: actions/download-artifact@v3
        id: download-coverage-from-unit-tests
        with:
          name: coverage-from-unit-tests
        continue-on-error: true
      - name: download coverage from features tests
        uses: actions/download-artifact@v3
        id: download-coverage-from-features-tests
        with:
          name: coverage-from-features-tests
        continue-on-error: true
      - name: install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'pnpm'
      - name : install dependencies
        run: make install-offline
      - name : prepare and merge coverage files
        run: make merge-coverage
      - name: codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info # optional
          flags: unittests # optional
          name: codecov-umbrella # optional
          fail_ci_if_error: true # optional (default = false)
          verbose: false # optional (default = false)

  sonarcloud:
    runs-on: ubuntu-latest
    needs: test-unit
    environment: CI
    steps:
      - name: run sonarcloud scanner
        uses: newlight77/kata-monorepo-github-actions/.github/actions/sonarcloud-scanner@sonarcloud-quality-gate-switch
        with:
          SONARCLOUD_ADMIN_TOKEN: ${{ secrets.SONARCLOUD_ADMIN_TOKEN }}
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      
  notify-slack:
    needs:
      - codecov
      - sonarcloud
      - lint
    runs-on: ubuntu-latest
    environment: CI
    steps:
      - name: slack notificaiton
        uses: slackapi/slack-github-action@v1.22.0
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        with:
          channel-id: "C05UA1LUW1H" #ci
          payload: |
            {
              "text": "github CI passed",
              "attachments": [
                {
                  "color": "warning",
                  "pretext": "Quality Gate bypassed with no-coverage",
                  "fields": [
                    {
                      "title": "Pull Request",
                      "short": true,
                      "value": "<https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }}>"
                    },
                    {
                      "title": "Branch",
                      "value": "${{ github.head_ref || github.ref_name }}",
                      "short": true
                    }
                  ],
                  "footer_icon": "https://github.githubassets.com/favicon.ico",
                  "footer": "<https://github.com/${{ github.repository }} | ${{ github.repository }}/pull/${{ github.event.pull_request.number }}>"
                }
              ]
            }

  once_merged:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - if: contains(github.event.pull_request.labels.*.name, 'no-coverage')
        name: run post-merged
        run : echo run a post-merged job